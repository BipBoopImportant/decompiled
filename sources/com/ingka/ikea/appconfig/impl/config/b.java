package com.ingka.ikea.appconfig.impl.config;

import N4.a;
import Q4.g;
import com.ingka.ikea.appconfig.impl.config.MarketConfigDatabase;

final class b extends N4.b {

    /* renamed from: a  reason: collision with root package name */
    private final a f92891a = new MarketConfigDatabase.z();

    public b() {
        super(20, 21);
    }

    public void migrate(g gVar) {
        gVar.T("CREATE TABLE IF NOT EXISTS `_new_MarketConfig` (`marketCode` TEXT NOT NULL, `languageCode` TEXT NOT NULL, `calendar` TEXT NOT NULL, `catalogBase` TEXT NOT NULL, `dateFormat` TEXT NOT NULL, `emptyListCarouselData` TEXT NOT NULL, `popularCategoryId` TEXT NOT NULL, `measurementSystem` TEXT NOT NULL, `urls` TEXT NOT NULL, `mCommerceVersion` TEXT NOT NULL DEFAULT 'V2', `isSignUpHlp` INTEGER NOT NULL, `showEnergyLabelCartList` INTEGER NOT NULL, `deliveryCalculationDisclaimers` TEXT NOT NULL, `privacyConsentRequired` INTEGER NOT NULL, `mapServiceData` TEXT, `legalInformationFooter` TEXT, `ikeaBusiness` INTEGER NOT NULL, `postalCodePickerConfig` TEXT NOT NULL, `searchHints` TEXT NOT NULL, `giftCardConfiguration` TEXT, `trackIcm` INTEGER NOT NULL, `symbol` TEXT NOT NULL, `decimalSymbol` TEXT NOT NULL, `code` TEXT NOT NULL, `negativeFormat` TEXT NOT NULL, `positiveFormat` TEXT NOT NULL, `digitGroupSymbol` TEXT NOT NULL, `integerSymbol` TEXT NOT NULL, `nbrFractionDigits` INTEGER NOT NULL, `showFractionDigitsOnInteger` INTEGER NOT NULL, `conversionRate` REAL, `secondary_symbol` TEXT, `secondary_decimalSymbol` TEXT, `secondary_code` TEXT, `secondary_negativeFormat` TEXT, `secondary_positiveFormat` TEXT, `secondary_digitGroupSymbol` TEXT, `secondary_integerSymbol` TEXT, `secondary_nbrFractionDigits` INTEGER, `secondary_showFractionDigitsOnInteger` INTEGER, `secondary_conversionRate` REAL, `detailedUnitPrice` INTEGER NOT NULL, `perPiecePrice` INTEGER NOT NULL, `showFoodComparisionPrice` INTEGER NOT NULL, `formerPriceCrossOutNLP` INTEGER NOT NULL, `formerPriceCrossOutTRO` INTEGER NOT NULL, `showNLPDateInterval` INTEGER NOT NULL, `showVATInformation` INTEGER NOT NULL, `enablePrf` INTEGER NOT NULL, `showPricesInclVat` INTEGER NOT NULL, `domain` TEXT NOT NULL, `clientId` TEXT NOT NULL, `parameters` TEXT NOT NULL, `signUp_domain` TEXT NOT NULL, `signUp_clientId` TEXT NOT NULL, `signUp_parameters` TEXT NOT NULL, PRIMARY KEY(`marketCode`, `languageCode`))");
        gVar.T("INSERT INTO `_new_MarketConfig` (`marketCode`,`languageCode`,`calendar`,`catalogBase`,`dateFormat`,`emptyListCarouselData`,`popularCategoryId`,`measurementSystem`,`urls`,`mCommerceVersion`,`isSignUpHlp`,`showEnergyLabelCartList`,`deliveryCalculationDisclaimers`,`privacyConsentRequired`,`mapServiceData`,`legalInformationFooter`,`ikeaBusiness`,`postalCodePickerConfig`,`searchHints`,`giftCardConfiguration`,`trackIcm`,`symbol`,`decimalSymbol`,`code`,`negativeFormat`,`positiveFormat`,`digitGroupSymbol`,`integerSymbol`,`nbrFractionDigits`,`showFractionDigitsOnInteger`,`conversionRate`,`secondary_symbol`,`secondary_decimalSymbol`,`secondary_code`,`secondary_negativeFormat`,`secondary_positiveFormat`,`secondary_digitGroupSymbol`,`secondary_integerSymbol`,`secondary_nbrFractionDigits`,`secondary_showFractionDigitsOnInteger`,`secondary_conversionRate`,`detailedUnitPrice`,`perPiecePrice`,`showFoodComparisionPrice`,`formerPriceCrossOutNLP`,`formerPriceCrossOutTRO`,`showNLPDateInterval`,`showVATInformation`,`enablePrf`,`showPricesInclVat`,`domain`,`clientId`,`parameters`,`signUp_domain`,`signUp_clientId`,`signUp_parameters`) SELECT `marketCode`,`languageCode`,`calendar`,`catalogBase`,`dateFormat`,`emptyListCarouselData`,`popularCategoryId`,`measurementSystem`,`urls`,`mCommerceVersion`,`isSignUpHlp`,`showEnergyLabelCartList`,`deliveryCalculationDisclaimers`,`privacyConsentRequired`,`mapServiceData`,`legalInformationFooter`,`ikeaBusiness`,`postalCodePickerConfig`,`searchHints`,`giftCardConfiguration`,`trackIcm`,`symbol`,`decimalSymbol`,`code`,`negativeFormat`,`positiveFormat`,`digitGroupSymbol`,`integerSymbol`,`nbrFractionDigits`,`showFractionDigitsOnInteger`,`conversionRate`,`secondary_symbol`,`secondary_decimalSymbol`,`secondary_code`,`secondary_negativeFormat`,`secondary_positiveFormat`,`secondary_digitGroupSymbol`,`secondary_integerSymbol`,`secondary_nbrFractionDigits`,`secondary_showFractionDigitsOnInteger`,`secondary_conversionRate`,`detailedUnitPrice`,`perPiecePrice`,`showFoodComparisionPrice`,`formerPriceCrossOutNLP`,`formerPriceCrossOutTRO`,`showNLPDateInterval`,`showVATInformation`,`enablePrf`,`showPricesInclVat`,`domain`,`clientId`,`parameters`,`signUp_domain`,`signUp_clientId`,`signUp_parameters` FROM `MarketConfig`");
        gVar.T("DROP TABLE `MarketConfig`");
        gVar.T("ALTER TABLE `_new_MarketConfig` RENAME TO `MarketConfig`");
        this.f92891a.a(gVar);
    }
}
